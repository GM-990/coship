#ifndef _CS_SHUAIXIN_H_
#define _CS_SHUAIXIN_H_

#ifdef __cplusplus
extern "C" {
#endif
 

/**
* 甩信JAVA回调类型
*/
typedef enum {
	EM_CONNECT,/*手机和机顶盒连接成功，*/
	EM_DISCONNECT ,	/*手机和机顶盒断开连接*/
	EM_SETURL,   /*2 中间件将播放的URL发给应用，发送给应用的第一个参数片花URL，第二个参数是正片URL,类型均为字符数组*/ 	
	EM_SETVOLUME ,     /*3 手机遥控器设置机顶盒播放音量,发送给应用的第一个参数是音量值，类型为int*/
	EM_SETPROCESS,    /*4手机设置机顶盒播放进度,发送给应用的第一个参数是播放进度值，类型是int,值为当前进度占总进度的百分比*/
	EM_SETTICKET,   /*5中间件将播放的ticket发给应用,发送给应用的第一个参数对应的是ticket内容  */
	EM_MTOSNOTIFY  /*6自定义命令通知，STB->MOBILE，回调的第一个参数对应的是手机传过来的字符串  */
}CSSXEvent_E;

/*
@brief 甩信模块返回值
*/
typedef enum  
{
    EM_CSSX_SUCCESS = 0, 
    EM_CSSX_FAILURE,
    EM_CSSX_TIMEOUT,
    EM_CSSX_INVALPARA,
    EM_CSSX_SOCKET_ERROR 
} CSSXRet_E;

/*
@brief 甩信模块使用的传输设备
*/
typedef enum  
{
    EM_CSSX_TANSDEVTYPE_UNDEF = 0, 
    EM_CSSX_TANSDEVTYPE_BLUETOOTH ,
    EM_CSSX_TANSDEVTYPE_ETHERNET ,
    EM_CSSX_TANSDEVTYPE_COM
} CSSXTransDevType_E;


/**************************************************************************************************************
@brief 	设置甩信生成URL

@param[char*] pcURL: 甩信生成URL, pcURL必须是以'\0'结尾的字符串, 且字符串中间不能含有'\0\.且pcURL的长度需
					 小于(1024)， 否则不能将甩信生成URL正确设置到C模块里面

@return 成功返回TRUE;失败返回FALSE
@note 
-- 
**************************************************************************************************************/
BOOL CSSXSetSaitionBuildURL(char *pcURL);

/**************************************************************************************************************
@brief 	获取甩信生成URL

@param 无

@return 获取甩信生成URL
@note 
-- 
**************************************************************************************************************/
char* CSSXGetSaitionBuildURL();

/**************************************************************************************************************
@brief 	获取甩信中心URL

@param 无

@return 返回甩信中心的URL
@note 
-- 
**************************************************************************************************************/
char* CSSXGetHomeURL();

/**************************************************************************************************************
@brief 	设置甩信中心URL

@param[char*] pcURL: 甩信中心URL, pcURL必须是以'\0'结尾的字符串, 且字符串中间不能含有'\0\.且pcURL的长度需
					 小于(1024)， 否则不能将甩信中心URL正确设置到C模块里面

@return 成功返回TRUE;失败返回FALSE
@note 
-- 
**************************************************************************************************************/
BOOL CSSXSetHomeURL(char *pcURL);

/**************************************************************************************************************
@brief 	获取自定义命令通知

@param 无

@return 返回自定义命令通知的内容
@note 
-- 
**************************************************************************************************************/
char* CSSXGetNotifyContent();

/**************************************************************************************************************
@brief 	设置自定义命令通知

@param[char*] pcNotifyContent: 自定义命令通知内容, pcNotifyContent必须是以'\0'结尾的字符串, 且字符串中间不能含有'\0\.
					 且pcNotifyContent的长度需小于(2*1024)， 否则不能将甩信中心URL正确设置到C模块里面

@return 成功返回TRUE;失败返回FALSE
@note 
-- 
**************************************************************************************************************/
BOOL CSSXSetNotifyContent(char *pcNotifyContent);

/**************************************************************************************************************
@brief 	设置甩信模块使用的传输设备，如蓝牙，Ethernet等

@param[in] eDeviceType: 甩信模块使用的传输设备,具体定义见CSSXTransDevType_E

@return 
@note 
-- 该接口必须在CSSXInit之前调用
- 如果用户没有调用此接口设置，默认采用EM_CSSX_TANSDEVTYPE_ETHERNET方式进行传输
**************************************************************************************************************/
void CSSXSetTransDevice(CSSXTransDevType_E eDeviceType);

/**************************************************************************************************************
@brief 获取甩信模块使用的传输设备，如蓝牙，Ethernet等

@param

@return 甩信模块使用的传输设备
@note 
**************************************************************************************************************/
CSSXTransDevType_E CSSXGetTransDevice(void);


/**************************************************************************************************************
@brief 	启动甩信服务端

@param[in] nPort: 甩信服务端端口，是否需要可配置?

@return 成功EM_CSSX_SUCCESS。失败EM_CSSX_FAILURE
@note 
- 如果需要启动甩信服务，调用此函数就可以了。函数内部负责甩信客户端和机顶盒之间的数据传输和解析
**************************************************************************************************************/
int CSSXInit(unsigned int nPort);

/**************************************************************************************************************
@brief 	卸载甩信模块时释放出资源

@param[in] 无

@return 成功EM_CSSX_SUCCESS。失败EM_CSSX_FAILURE
@note 
- 如果甩信模块启动不成功，可以调用此接口释放资源
**************************************************************************************************************/
int CSSXUnInit();

/**************************************************************************************************************
@brief 调用CSSXAddCallback和CSSXRemoveCallback的时候, 需要传入此类型的函数指针
@param[in] dwUserData:用来保存用户数据
@param[in] eMsg:表示当前收到的消息类型
@param[in] dwPara1: 参数1
@param[in] dwPara2: 参数2
**************************************************************************************************************/
typedef void (*CSOnSXEventCallBack_p)(DWORD dwUserData, CSSXEvent_E eMsg, void *pvPara1, void *pvPara2);



/*************************************************************************
@brief  向甩信模块注册一个callback

@param[in] dwUserData: 保存用户数据信息
@param[in] Callback:  要添加的回调	
*************************************************************************/
BOOL CSSXAddCallback(DWORD dwUserData, CSOnSXEventCallBack_p fnOnSXEventCallBack);


/*************************************************************************
@brief  从甩信模块移掉一个callback

@param[in] dwUserData: 保存用户数据信息
@param[in] Callback:  要删除的回调
*************************************************************************/
BOOL CSSXRemoveCallback(DWORD dwUserData, CSOnSXEventCallBack_p fnOnSXEventCallBack);

#ifdef __cplusplus
}
#endif
/** @} */
#endif  

